name: Integration Tests (Using Nx)
author: "Mage-OS"
description: "A Github Action that runs the Magento Integration Tests for all modules that are dependant on the changes in PR (using NX to calculate)"

on:
  - workflow_call

inputs:
  repository:
    description: "Repository"
    required: true
  pr_head:
    description: "head SHA"
    required: true
  pr_base:
    description: "pr base SHA"
    required: true

jobs:
  matrix-calculator:
    uses: ./supported-services-matrix-calculator/action.yml
    with:
      repository: ${{ inputs.repository }}
      ref: ${{ inputs.pr_head }}

  nx-diff-calculator:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR commit
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.pr_head }}
          path: main
          # Need to do this otherwise Nx cant determine diff
          fetch-depth: 0

      - name: Fetch base
        working-directory: ./main
        run: git fetch origin ${{ inputs.pr_base }}

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - id: get-composer-and-php-version
        name: Get Composer & PHP Version
        working-directory: ./main
        run: |
          echo "php_version=$(jq -c .services.php[0] supported-services.json)" >> "$GITHUB_OUTPUT"
          echo "composer_version=$(jq -rc .services.composer[0] supported-services.json)" >> "$GITHUB_OUTPUT"

      - name: Composer Install
        uses: php-actions/composer@v6
        with:
          version: ${{ steps.get-composer-and-php-version.outputs.composer_version }}
          php_version: ${{ steps.get-composer-and-php-version.outputs.php_version }}
          args: "--ignore-platform-reqs --optimize-autoloader"
          working_dir: main

      # could probably swap this to a docker container in future
      - name: Install NX
        working-directory: ./main
        run: |
          npm install -g nx@15.4.1

      # should be able to cache this in future also
      - name: Checkout Nx Repo
        uses: actions/checkout@v3
        with:
          repository: adamzero1/nx-for-php
          ref: docker-wrapper-2
          path: nx

      - name: Copy in NX files
        working-directory: ./main
        run: |
          NXDIR="../nx"
          cp -r ${NXDIR}/nx ./
          cp ${NXDIR}/nx.json ./
          cp ${NXDIR}/package.json ./
          cp ${NXDIR}/package-lock.json ./

      - name: Install NPM Deps
        working-directory: ./main
        run: |
          npm ci

      - name: Generate Nx Workspace
        working-directory: ./main
        run: |
          npm run generate-workspace -- --commands=test:unit,test:integration \
            --test:unit='if [ -d {{ MODULE_PATH }}Test/Unit ]; then ${WARDEN} env exec -T php-fpm ./vendor/bin/phpunit -c dev/tests/unit/phpunit.xml {{ MODULE_PATH }}Test/Unit; else echo "{{ MODULE_NAME }} has no unit test; fi' \
            --test:integration='${WARDEN} env exec -T --workdir /var/www/html/dev/tests/integration php-fpm ../../../vendor/bin/phpunit --configuration phpunit.xml.dist --testsuite '"'"'Magento Integration Tests Real Suite'"'"' --filter='"'"'/Magento/{{ MODULE_DIRECTORY }}/|Magento\\{{ MODULE_DIRECTORY }}'"'"' --log-junit=../../../phpunit-output/junit/{{ MODULE_DIRECTORY }}.xml --coverage-html=../../../phpunit-output/coverage-html/{{ MODULE_DIRECTORY }}'

      - name: Print Affected
        working-directory: ./main
        run: |
          AFFECTED_OUTPUT=/tmp/affect.json
          nx print-affected --head=HEAD --base=remotes/origin/${{ inputs.pr_base }} > ${AFFECTED_OUTPUT}
          echo "Affected Projects: $(jq .projects ${AFFECTED_OUTPUT})"

      # just to get some timings
      - name: Print Affected2
        working-directory: ./main
        run: |
          AFFECTED_OUTPUT=/tmp/affect.json
          nx print-affected --head=HEAD --base=remotes/origin/${{ inputs.pr_base }} > ${AFFECTED_OUTPUT}
          echo "Affected Projects: $(jq .projects ${AFFECTED_OUTPUT})"
      
      - name: Project Cache
        uses: actions/cache/save@v3
        with:
          path: main
          key: ${{ runner.os }}-project-${{ inputs.pr_head }}
    
  integration-tests:
    needs: [matrix-calculator, nx-diff-calculator]
    strategy:
      fail-fast: false
      matrix:
        php_version: ${{ fromJSON(needs.matrix-calculator.outputs.php_versions) }}
        database_version: ${{ fromJSON(needs.matrix-calculator.outputs.database_versions) }}
        search_version: ${{ fromJSON(needs.matrix-calculator.outputs.search_versions) }}
        message_queue_version: ${{ fromJSON(needs.matrix-calculator.outputs.message_queue_versions) }}
        cache_version: ${{ fromJSON(needs.matrix-calculator.outputs.cache_versions) }}
        http_cache_version: ${{ fromJSON(needs.matrix-calculator.outputs.http_cache_versions) }}
    runs-on: ubuntu-latest
    steps:
      - name: Debug output
        run: |
          echo "PHP Versions: ${{ matrix.php_version }}"
          echo "database Versions: ${{ matrix.database_version }}"
          echo "search Versions: ${{ matrix.search_version }}"
          echo "message_queue Versions: ${{ matrix.message_queue_version }}"
          echo "cache Versions: ${{ matrix.cache_version }}"
          echo "http_cache Versions: ${{ matrix.http_cache_version }}"

      - name: Project Cache
        uses: actions/cache/restore@v3
        with:
          path: main
          key: ${{ runner.os }}-project-${{ inputs.pr_head }}

      # could probably swap this to a docker container in future
      - name: Install NX
        working-directory: ./main
        run: |
          npm install -g nx@15.4.1

      - name: Print Affected
        working-directory: ./main
        run: |
          AFFECTED_OUTPUT=/tmp/affect.json
          nx print-affected --head=HEAD --base=remotes/origin/${{ inputs.pr_base }} > ${AFFECTED_OUTPUT}
          cat ${AFFECTED_OUTPUT}
          echo "Affected Projects: $(jq .projects ${AFFECTED_OUTPUT})"

      - name: Setup Warden Environment
        uses: adamzero1/mageos-github-actions/warden/setup-environment@main
        with:
          php_version: ${{ matrix.php_version }}
          database: ${{ matrix.database_version }}
          search: ${{ matrix.search_version }}
          rabbitmq: ${{ matrix.message_queue_version }}
          redis: ${{ matrix.cache_version }}
          varnish: ${{ matrix.http_cache_version }}
          base_directory: "./main"

      - name: Setup config for Integration tests
        uses: adamzero1/mageos-github-actions/warden/integration-tests@main
        with:
          search: ${{ matrix.search_version }}
          rabbitmq: ${{ matrix.message_queue_version }}
          redis: ${{ matrix.cache_version }}
          run_memory_test: 0
          run_magento_integration_tests: 0
          run_magento_integration_tests_real_suite: 0
          base_directory: "./main"

      # - name: Run Memory Tests
      #   uses: ./main/.github/action/warden/run-integration-tests
      #   with:
      #     search: ${{ matrix.search_version }}
      #     rabbitmq: ${{ matrix.message_queue_version }}
      #     redis: ${{ matrix.cache_version }}
      #     run_memory_test: 1
      #     run_magento_integration_tests: 0
      #     run_magento_integration_tests_real_suite: 0

      # - name: Run Integration Tests
      #   uses: ./main/.github/action/warden/run-integration-tests
      #   with:
      #     search: ${{ matrix.search_version }}
      #     rabbitmq: ${{ matrix.message_queue_version }}
      #     redis: ${{ matrix.cache_version }}
      #     run_memory_test: 0
      #     run_magento_integration_tests: 1
      #     run_magento_integration_tests_real_suite: 0

      - name: Run Integration Tests (Real)
        working-directory: ./main
        run: |
          export WARDEN="$(dirname $(pwd))/warden/bin/warden"
          nx affected --target=test:integration --head=HEAD --base=remotes/origin/${{ inputs.pr_base }}
